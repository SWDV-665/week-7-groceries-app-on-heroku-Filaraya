{"version":3,"sources":["webpack:///src/app/tab1/tab1.page.html","webpack:///src/app/groceries-service.service.ts","webpack:///src/app/input-dialog-service.service.ts","webpack:///src/app/tab1/tab1-routing.module.ts","webpack:///src/app/tab1/tab1.module.ts","webpack:///src/app/tab1/tab1.page.scss","webpack:///src/app/tab1/tab1.page.ts"],"names":["GroceriesServiceService","items","console","log","index","splice","item","push","providedIn","InputDialogServiceProvider","alertCtrl","dataService","create","header","message","inputs","name","placeholder","value","quantity","buttons","text","handler","data","undefined","editItem","addItem","prompt","present","routes","path","component","Tab1PageRoutingModule","imports","forChild","exports","Tab1PageModule","declarations","providers","Tab1Page","navCtrl","toastCtrl","inputDialogService","SocialSharing","title","getItems","toast","duration","removeItem","subject","socialSharing","share","then","error","showPrompt","selector","template"],"mappings":"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","file":"tab1-tab1-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title class=\\\"bar-positive\\\">\\n      Grocery\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<!-- Defines a basic grocery sliding list -->\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <div ionEvent=\\\"true\\\"></div>\\n  <h3 class=\\\"no-item\\\" align-text= 'center' *ngIf=\\\"loadItems().length === 0\\\">\\n    No item available on the list!\\n  </h3>\\n  <ion-list>\\n    <ion-item-sliding *ngFor=\\\"let item of loadItems(); let i = index\\\">\\n      <ion-item>\\n        <ion-list lines=\\\"inset\\\">\\n          <ion-label>{{item.name}}</ion-label>\\n        </ion-list>\\n\\n        <ion-item>\\n          \\n            <p>{{item.quantity}}</p>\\n          \\n        </ion-item>\\n        \\n\\n      </ion-item>\\n      <ion-item-options>\\n        <button (click)=\\\"editItem(item, i)\\\" ion-button class= \\\"editItem\\\"icon-start>\\n          <ion-icon name=\\\"create\\\"></ion-icon>\\n          Edit\\n        </button>\\n\\n        <button (click)=\\\"shareItem(item, i)\\\" ion-button color=\\\"light\\\" icon-start>\\n          <ion-icon name=\\\"share\\\"></ion-icon>\\n          Share\\n        </button>\\n\\n        <button (click)=\\\"removeItem(item, i)\\\" ion-button class=\\\"removeItem\\\" icon-start>\\n          <ion-icon name=\\\"trash\\\"></ion-icon>\\n          Done\\n        </button>\\n      </ion-item-options>\\n    </ion-item-sliding>\\n  </ion-list>\\n\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button (click)=\\\"addItem()\\\" ion-fab mini>\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\";","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GroceriesServiceService {\n\n  items = [];\n\n  constructor() {\n    console.log('Hello GroceriesServiceProvider Provider');\n  }\n\n  getItems() {\n    return this.items;\n  }\n\n  removeItem(index) {\n    this.items.splice(index, 1);\n  }\n\n  addItem(item) {\n    this.items.push(item);\n  }\n\n  editItem(item, index) {\n    this.items[index] = item;\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { GroceriesServiceService } from './groceries-service.service';\n\n/*\n  Generated class for the InputDialogServiceProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class InputDialogServiceProvider {\n\n  constructor(public alertCtrl: AlertController, public dataService: GroceriesServiceService) {\n    console.log('Hello InputDialogServiceProvider Provider');\n  }\n\n\n  async showPrompt(item?, index?) {\n    const prompt = await this.alertCtrl.create({\n      header: item ? 'Edit Item' : 'Add Item',\n      message: item ? \"Please edit item...\" : \"Please enter item...\",\n      inputs: [\n        {\n          name: 'name',\n          placeholder: 'Name',\n          value: item ? item.name : null\n        },\n        {\n          name: 'quantity',\n          placeholder: 'Quantity',\n          value: item ? item.quantity :null\n\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          handler: data => {\n            console.log('Cancel clicked');\n          }\n        },\n        {\n          text: 'Save',\n          handler: item => {\n            console.log('Saved clicked', item);\n            if (index !== undefined) {\n              this.dataService.editItem(item, index);\n            }\n            else {\n              this.dataService.addItem(item);\n            }\n\n          }\n        }\n      ]\n    });\n    prompt.present();\n  }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Tab1Page } from './tab1.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab1Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab1PageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { Tab1PageRoutingModule } from './tab1-routing.module';\nimport { GroceriesServiceService } from '../groceries-service.service';\nimport { InputDialogServiceProvider } from '../input-dialog-service.service';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    Tab1PageRoutingModule\n  ],\n  declarations: [Tab1Page],\n  providers:[\n    GroceriesServiceService,\n    InputDialogServiceProvider\n  ]\n})\nexport class Tab1PageModule {}\n","export default \".editItem {\\n  background-color: #2d918c;\\n  color: blue;\\n}\\n\\n.removeItem {\\n  background-color: red;\\n  color: blue;\\n}\\n\\n.no-item {\\n  color: #0f509b;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9maWxtb25hcmF5YS9Eb2N1bWVudHMvd2Vla181L3dlZWstNS1pb25pYy1uYXRpdmUtRmlsYXJheWEvc3JjL2FwcC90YWIxL3RhYjEucGFnZS5zY3NzIiwic3JjL2FwcC90YWIxL3RhYjEucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0kseUJBQUE7RUFDQSxXQUFBO0FDREo7O0FER0E7RUFDSSxxQkFBQTtFQUNBLFdBQUE7QUNBSjs7QURHQTtFQUNJLGNBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL3RhYjEvdGFiMS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcblxuLmVkaXRJdGVtIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNDUsIDE0NSwgMTQwKTtcbiAgICBjb2xvcjogYmx1ZVxufVxuLnJlbW92ZUl0ZW0ge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcbiAgICBjb2xvcjogYmx1ZVxuXG59XG4ubm8taXRlbSB7XG4gICAgY29sb3I6IHJnYigxNSwgODAsIDE1NSk7XG59IiwiLmVkaXRJdGVtIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJkOTE4YztcbiAgY29sb3I6IGJsdWU7XG59XG5cbi5yZW1vdmVJdGVtIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xuICBjb2xvcjogYmx1ZTtcbn1cblxuLm5vLWl0ZW0ge1xuICBjb2xvcjogIzBmNTA5Yjtcbn0iXX0= */\";","import { Component } from '@angular/core';\nimport { NavController, } from '@ionic/angular';\nimport { ToastController } from '@ionic/angular';\nimport { AlertController } from '@ionic/angular';\nimport { GroceriesServiceService } from '../groceries-service.service';\nimport { InputDialogServiceProvider } from '../input-dialog-service.service';\nimport { SocialSharing } from '@ionic-native/social-sharing/ngx';\n\n\n@Component({\n  selector: 'app-tab1',\n  templateUrl: 'tab1.page.html',\n  styleUrls:['tab1.page.scss']\n})\nexport class Tab1Page {\n\n  title = \"Grocery\";\n  socialSharing: any;\n\n  constructor(\n    public navCtrl: NavController, \n    public toastCtrl: ToastController, \n    public alertCtrl: AlertController, \n    public dataService: GroceriesServiceService, \n    public inputDialogService: InputDialogServiceProvider,\n    public SocialSharing: SocialSharing,\n    ) {\n\n  }\n\n  loadItems() {\n    return this.dataService.getItems();\n  }\n\n  async removeItem(item, index) {\n    console.log(\"Removing Item - \", item, index);\n    const toast = this.toastCtrl.create({\n      message: 'Removing Item - ' + index + \" ...\",\n      duration: 3000\n    });\n    (await toast).present();\n\n    this.dataService.removeItem(index);  \n  }\n\n  async shareItem(item, index) {\n    console.log(\"Sharing Item - \", item, index);\n    const toast = this.toastCtrl.create({\n      message: 'Sharing Item - ' + index + \" ...\",\n      duration: 3000\n    });\n\n    (await toast).present();\n\n    let message = \"Grocery Item - Name: \" + item.name + \" - Quantity: \" + item.quantity;\n    let subject = \"Shared via Groceries app\";\n\n    this.socialSharing.share(message, subject).then(() => {\n      // Sharing via email is possible\n      console.log(\"Shared successfully!\");\n    }).catch((error: any) => {\n      console.error(\"Error while sharing \", error);\n    });    \n\n  }\n  async editItem(item, index) {\n    console.log(\"Edit Item - \", item, index);\n    const toast = this.toastCtrl.create({\n      message: 'Editing Item - ' + index + \" ...\",\n      duration: 3000\n    });\n    (await toast).present();\n    this.inputDialogService.showPrompt(item, index);\n  }  \n\n  addItem() {\n    console.log(\"Adding Item\");\n    this.inputDialogService.showPrompt();\n  }\n\n\n\n}\n"]}